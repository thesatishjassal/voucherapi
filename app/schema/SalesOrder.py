from pydantic import BaseModel, ConfigDict
from datetime import date
from typing import Optional

class SalesOrderBase(BaseModel):
    salesOrder_id: Optional[int] = None  # Auto-generated by DB, so optional in Base
    salesOrder_no: str
    salesperson: Optional[str] = None
    subject: Optional[str] = None
    amount_including_gst: Optional[int] = None
    without_gst: Optional[int] = None
    gst_amount: Optional[int] = None
    amount_with_gst: Optional[int] = None
    remarks: Optional[str] = None
    status: Optional[str] = None
    date: Optional[date] = None
    client_id: int  # Required to link client

    class Config:
        from_attributes = True  # Make sure the model works with ORM

class SalesOrderCreate(SalesOrderBase):
    pass  # Same as base model, used for creating a new SalesOrder

class SalesOrderUpdate(SalesOrderBase):
    pass  # Extend the base model for updating SalesOrder

class SalesOrder(SalesOrderBase):
    model_config = ConfigDict(from_attributes=True)  # ORM compatibility
    # Include an id field for retrieving records with the database
    salesOrder_id: int
