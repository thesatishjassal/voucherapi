from pydantic import BaseModel, ConfigDict
from datetime import date
from typing import Optional


class SalesOrderBase(BaseModel):
    salesorder_id: Optional[int] = None  # Auto-generated by DB
    salesorder_no: str
    salesperson: Optional[str] = None
    subject: Optional[str] = None
    amount_including_gst: Optional[int] = None
    without_gst: Optional[int] = None
    gst_amount: Optional[int] = None
    amount_with_gst: Optional[int] = None
    remarks: Optional[str] = None
    status: Optional[str] = None
    date: Optional[date] = None
    client_id: int  # Required to link client

    # ✅ Added new fields
    payment_method: Optional[str] = None  # e.g. "Cash", "Card", "UPI", "Bank Transfer"
    freight: Optional[str] = None         # e.g. "Paid", "To Pay"
    issue_slip_no: Optional[str] = None   # ✅ Newly added field

    class Config:
        from_attributes = True  # For ORM compatibility


class SalesOrderCreate(SalesOrderBase):
    pass  # Used for creating a new SalesOrder


class SalesOrderUpdate(SalesOrderBase):
    pass  # Used for updating existing SalesOrder


class SalesOrder(SalesOrderBase):
    model_config = ConfigDict(from_attributes=True)
    salesorder_id: int  # Ensure ID is included for retrieval
